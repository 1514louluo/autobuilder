#---------------------------------------------------------------------------------------#
#                                                                                       #
#     #     #   #  ######   ###   ####    #   #    #     #       ####    #####    ####  #
#    ##    #   #    #     #   #  #   #   #   #    #     #       #   #   #        #   #  #
#   # #   #   #    #     #   #  ####    #   #    #     #       #   #   #####    ####    #
#  ####  #   #    #     #   #  #   #   #   #    #     #       #   #   #        # #      #
# #   #  ###     #      ###   ####     ###     #     ######  ####    #####    #   #     #
#                                                                                       #
#---------------------------------------------------------------------------------------#

#--------------------------------------------------------------------------------------#
# some functions:                                                                      #
#      GET_ALL_FILES  : get all src files!     		                               #
#      FILT_FILES     : filt some file in all src files!     		               #
#      FMT_FILES      : fmt files to xx.c|b.cpp|l.cc     		               #
#				......	                                               #
#   certainly you can define your own functions! you can read makefile lang!           #
#--------------------------------------------------------------------------------------#
# just a example as follow:
GET_ALL_FILES=$(shell find $(1) -regex ".*\.\(c\|cc\|cpp\)" -type f|grep -E -o "[a-zA-Z0-9_-]+\.(c|cc|cpp)")
FILT_FILES=$(filter-out $(1),$(call GET_ALL_FILES,$(2)))
FMT_FILT_FILES=$(shell echo $(call FILT_FILES,$(1),$(2))|sed 's/ /|/g')
APP_SRC=$(APP_ROOT)/src
APP_LIB=$(APP_ROOT)/lib
APP_BIN=$(APP_ROOT)/bin
APP_INCLUDE=$(APP_ROOT)/include
APP_CONF=$(APP_ROOT)/conf

#--------------------------------------------------------------------------------------#
#				   (optional)                                          #
#    			some tmp vars can define here,                       	       #
#    		but don't use INCLUDE,DLIBS,SLIBS,LIBS,CFLAGS,                         #
#    	   SHARED_TARGETS,STATIC_TARGETS these key words as var name!		       #
#    	   	  etc: -I$(XXX), -L$(XX) is not be supported!                          #
#--------------------------------------------------------------------------------------#
# just a example as follow:
IPATH_LOG4CPLUS		= -I/usr/local/include/log4cplus
IPATH_ZEROMQ_INC    = -I/usr/local/zeromq-3.2.2/include
INC_MYSQL 		=     -I/usr/local/mysql/include
PATH_CURL       =    -I/usr/local/curl-7.30.0/include
MONGODB_INC    =      -I/usr/local/mongo_client_lib/include

DLIB_BOOST       =  -L/usr/local/boost_1_53_0/lib  -lboost_thread
DLIB_MEMCACHED_CLIENT_SHARED = -L/usr/local/lib -lmemcached
DLIB_LIBCURL = -L/usr/local/curl-7.30.0/lib -lcurl -Wl,-rpath,/usr/local/curl-7.30.0/lib
DLIB_MYSQL   = -L/usr/local/mysql/lib -lmysqlclient_r  -lz -luuid -lpthread -lssl

SLIB_LIBEVENT    = /usr/local/libevent-2.0.19/lib/libevent.a  /usr/local/libevent-2.0.19/lib/libevent_core.a
SLIB_ZEROMQ      = /usr/local/zeromq-3.2.2/lib/libzmq.a

SLIB_REDIS   = /usr/local/lib/libhiredis.a
SLIB_MONGODB = /usr/local/mongo_client_lib/lib64/libmongoclient.a  /opt/mongodb-src-r2.2.2/build/linux2/normal/third_party/boost/libboost_filesystem.a /opt/mongodb-src-r2.2.2/build/linux2/normal/third_party/boost/libboost_thread.a /opt/mongodb-src-r2.2.2/build/linux2/normal/third_party/boost/libboost_program_options.a /opt/mongodb-src-r2.2.2/build/linux2/normal/third_party/boost/libboost_system.a


#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#           	      INCLUDE is all 3rd includes, "-I/xx/xx"		               #
#--------------------------------------------------------------------------------------#
# just a example as follow:
INCLUDE = -I/usr/include/openssl \
    $(INC_MYSQL) \
    -I/usr/local/libevent-2.0.19/include  \
	-I/usr/local/include \
	-I/usr/local/boost_1_53_0   \
    $(IPATH_LOG4CPLUS)  \
    $(MONGODB_INC)  \
    $(IPATH_ZEROMQ_INC)   \
    $(PATH_CURL)
    
#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#  DLIBS is all 3rd .so to link, "-L/xx/xx -lxxx" or "-L/xx/xx -lxxx-Wl,-rpath,/xx/xx" #
#--------------------------------------------------------------------------------------#
# just a example as follow:
DLIBS = $(DLIB_BOOST) \
        -lstdc++ -lrt -lbz2 -lpthread -lz -luuid -lz -lbz2 -lrt -lm -lc  \
        -L/usr/local/lib/ -liconv \
		$(DLIB_MEMCACHED_CLIENT_SHARED)                           \
		$(DLIB_MYSQL)                           \
		$(DLIB_LIBCURL)                           \
		-L/usr/local/lib -llog4cplus  

#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#           	      SLIBS is all 3rd .a to link, "/xx/xx.a"		               #
#--------------------------------------------------------------------------------------#
# just a example as follow:
SLIBS = $(SLIB_LIBEVENT) \
        $(SLIB_ZEROMQ)  \
		$(SLIB_MONGODB) \
		$(SLIB_REDIS) \

#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#           	      CFLAGS is all flags , "-g -03 -DXX..."		               #
#--------------------------------------------------------------------------------------#
# just a example as follow:
CFLAGS = -g -O3 -D_REENTRANT -DLOGGER -D_DEBUG -D__USE_EPOLL -D__LINUX__ -D_UNIX  

#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#   SHARED_TARGETS, generate .so file, fmt: libaa.so:aa.c|bb.cc|xx.cpp libmm.so:ll.c   #              
#--------------------------------------------------------------------------------------#
# just a example as follow:

SHARED_TARGETS = libdisp.so:$(call FMT_FILT_FILES,main.cpp,$(APP_SRC))  \
		libdisp1.so:$(call FMT_FILT_FILES,main.cpp,$(APP_SRC))

#--------------------------------------------------------------------------------------#
#                            (required, can be empty)                                  #
#   STATIC_TARGETS, generate .a file, fmt: libaa.a:aa.c|bb.cc|cc.cpp 		       #
#--------------------------------------------------------------------------------------#
# just a example as follow:

STATIC_TARGETS = libdisp.a:$(call FMT_FILT_FILES,main.cpp,$(APP_SRC))  \
		libdisp1.a:$(call FMT_FILT_FILES,main.cpp,$(APP_SRC))

#--------------------------------------------------------------------------------------#
#           		don not modify the following                                   #
#--------------------------------------------------------------------------------------#
LIBS+=$(SLIBS)
LIBS+=$(DLIBS)
